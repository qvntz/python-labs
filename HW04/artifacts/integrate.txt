(python-labs) qvntz@qvntz-osx HW04 % python integrate.py
ThreadPoolExecutor results:
ThreadPoolExecutor with 1 workers: 0.00 sec
ThreadPoolExecutor with 2 workers: 0.00 sec
ThreadPoolExecutor with 3 workers: 0.00 sec
ThreadPoolExecutor with 4 workers: 0.00 sec
ThreadPoolExecutor with 5 workers: 0.00 sec
ThreadPoolExecutor with 6 workers: 0.00 sec
ThreadPoolExecutor with 7 workers: 0.00 sec
ThreadPoolExecutor with 8 workers: 0.00 sec
ThreadPoolExecutor with 9 workers: 0.00 sec
ThreadPoolExecutor with 10 workers: 0.00 sec
ThreadPoolExecutor with 11 workers: 0.00 sec
ThreadPoolExecutor with 12 workers: 0.00 sec
ThreadPoolExecutor with 13 workers: 0.00 sec
ThreadPoolExecutor with 14 workers: 0.00 sec
ThreadPoolExecutor with 15 workers: 0.00 sec
ThreadPoolExecutor with 16 workers: 0.00 sec
ThreadPoolExecutor with 17 workers: 0.00 sec
ThreadPoolExecutor with 18 workers: 0.00 sec
ThreadPoolExecutor with 19 workers: 0.00 sec
ThreadPoolExecutor with 20 workers: 0.00 sec

Changing executor_type in the integrate function to 'ProcessPoolExecutor':
ProcessPoolExecutor results:
ProcessPoolExecutor with 1 workers: 0.00 sec
ProcessPoolExecutor with 2 workers: 0.05 sec
ProcessPoolExecutor with 3 workers: 0.04 sec
ProcessPoolExecutor with 4 workers: 0.04 sec
ProcessPoolExecutor with 5 workers: 0.04 sec
ProcessPoolExecutor with 6 workers: 0.04 sec
ProcessPoolExecutor with 7 workers: 0.05 sec
ProcessPoolExecutor with 8 workers: 0.05 sec
ProcessPoolExecutor with 9 workers: 0.06 sec
ProcessPoolExecutor with 10 workers: 0.06 sec
ProcessPoolExecutor with 11 workers: 0.06 sec
ProcessPoolExecutor with 12 workers: 0.06 sec
ProcessPoolExecutor with 13 workers: 0.07 sec
ProcessPoolExecutor with 14 workers: 0.06 sec
ProcessPoolExecutor with 15 workers: 0.06 sec
ProcessPoolExecutor with 16 workers: 0.07 sec
ProcessPoolExecutor with 17 workers: 0.07 sec
ProcessPoolExecutor with 18 workers: 0.07 sec
ProcessPoolExecutor with 19 workers: 0.06 sec
ProcessPoolExecutor with 20 workers: 0.07 sec